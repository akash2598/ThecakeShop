{"ast":null,"code":"var _jsxFileName = \"/Users/webwerks1/Documents/Project/React Js Training/demo_react/src/Admin.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Admin = () => {\n  _s();\n\n  var [cakes, setCakes] = useState({});\n  var allcakeurl = \"https://apibyashu.herokuapp.com/api/allcakes\";\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: allcakeurl\n    }).then(response => {\n      console.log(\"response from all cake api\", response.data.data);\n      setCakes(response.data.data);\n      setRun(false);\n    }, error => {\n      console.log(\"Error from all cake api\", error);\n    });\n  }, []);\n  const data = {\n    columns: [{\n      label: 'Name',\n      field: 'name',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Position',\n      field: 'position',\n      sort: 'asc',\n      width: 270\n    }, {\n      label: 'Office',\n      field: 'office',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'Age',\n      field: 'age',\n      sort: 'asc',\n      width: 100\n    }, {\n      label: 'Start date',\n      field: 'date',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Salary',\n      field: 'salary',\n      sort: 'asc',\n      width: 100\n    }],\n    rows: cakes\n  };\n  return /*#__PURE__*/_jsxDEV(MDBDataTable, {\n    striped: true,\n    bordered: true,\n    small: true,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Admin, \"srGygX2yoOkxD6z3Z0AiyK7dSNw=\");\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/webwerks1/Documents/Project/React Js Training/demo_react/src/Admin.js"],"names":["React","MDBDataTable","Admin","cakes","setCakes","useState","allcakeurl","useEffect","axios","method","url","then","response","console","log","data","setRun","error","columns","label","field","sort","width","rows"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,UAA7B;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAElB,MAAG,CAACC,KAAD,EAAOC,QAAP,IAAiBC,QAAQ,CAAC,EAAD,CAA5B;AACA,MAAIC,UAAU,GAAC,8CAAf;AACAC,EAAAA,SAAS,CAAC,MAAI;AACZC,IAAAA,KAAK,CAAC;AACRC,MAAAA,MAAM,EAAC,KADC;AAERC,MAAAA,GAAG,EAACJ;AAFI,KAAD,CAAL,CAGCK,IAHD,CAGOC,QAAD,IAAY;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCF,QAAQ,CAACG,IAAT,CAAcA,IAAvD;AACAX,MAAAA,QAAQ,CAACQ,QAAQ,CAACG,IAAT,CAAcA,IAAf,CAAR;AACAC,MAAAA,MAAM,CAAC,KAAD,CAAN;AACG,KAPD,EAOGC,KAAD,IAAS;AACbJ,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCG,KAAtC;AACD,KATG;AAUH,GAXU,EAWT,EAXS,CAAT;AAeA,QAAMF,IAAI,GAAG;AACXG,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,KAAK,EAAE,MAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KADO,EAOP;AACEH,MAAAA,KAAK,EAAE,UADT;AAEEC,MAAAA,KAAK,EAAE,UAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAPO,EAaP;AACEH,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAbO,EAmBP;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,KAAK,EAAE,KAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAnBO,EAyBP;AACEH,MAAAA,KAAK,EAAE,YADT;AAEEC,MAAAA,KAAK,EAAE,MAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAzBO,EA+BP;AACEH,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KA/BO,CADE;AAuCXC,IAAAA,IAAI,EAACpB;AAvCM,GAAb;AA4CA,sBACE,QAAC,YAAD;AACE,IAAA,OAAO,MADT;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAEY;AAJR;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAvED;;GAAMb,K;;KAAAA,K;AAyEN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { MDBDataTable } from 'mdbreact';\n\n\nconst Admin = () => {\n\n  var[cakes,setCakes]=useState({})\n  var allcakeurl=\"https://apibyashu.herokuapp.com/api/allcakes\"\n  useEffect(()=>{\n    axios({\n  method:\"get\",\n  url:allcakeurl\n  }).then((response)=>{\n  console.log(\"response from all cake api\",response.data.data)\n  setCakes(response.data.data)\n  setRun(false)\n    },(error)=>{\n  console.log(\"Error from all cake api\",error)\n})\n},[])\n\n\n\n  const data = {\n    columns: [\n      {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Position',\n        field: 'position',\n        sort: 'asc',\n        width: 270\n      },\n      {\n        label: 'Office',\n        field: 'office',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Age',\n        field: 'age',\n        sort: 'asc',\n        width: 100\n      },\n      {\n        label: 'Start date',\n        field: 'date',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Salary',\n        field: 'salary',\n        sort: 'asc',\n        width: 100\n      }\n    ],\n    rows:cakes\n      \n    \n  };\n\n  return (\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={data}\n    />\n  );\n}\n\nexport default Admin\n"]},"metadata":{},"sourceType":"module"}