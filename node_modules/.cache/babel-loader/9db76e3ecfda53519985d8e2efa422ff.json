{"ast":null,"code":"//this is simple to define syntax but we need it nit and clean use arrow function\n\n/*\nexport function FirstMiddleware(store) {\n    return function (next) {\n        return function (action) {\n            console.log(\"This is middlewares\")\n            console.log(\"action\", action, \"store\",store.getState())\n            var result = next(action)\n            console.log(\".....\",store.getState())\n            \n        }\n        \n    }\n    \n} */\n\n/*\n   let squre=function (num){\n       return num*num\n   }\n   let squre =()=>{\n       return num*num\n   }\n   same as\n   let square=num=>num*nums\n\n*/\n//ES6 syntax\nexport let logger = store => next => action => {\n  //console.log(\"This is middlewares\")\n  //  console.log(\"before action\", action, \"store\",store.getState())\n  var result = next(action); // console.log(\" after actions.....\",store.getState())\n};","map":{"version":3,"sources":["/Users/webwerks1/Documents/Project/React Js Training/demo_react/src/reduxstore/middlewares.js"],"names":["logger","store","next","action","result"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAO,IAAIA,MAAM,GAACC,KAAK,IAAEC,IAAI,IAAEC,MAAM,IAAE;AACnC;AACF;AACE,MAAIC,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAjB,CAHmC,CAIpC;AACF,CALM","sourcesContent":["//this is simple to define syntax but we need it nit and clean use arrow function\n\n/*\nexport function FirstMiddleware(store) {\n    return function (next) {\n        return function (action) {\n            console.log(\"This is middlewares\")\n            console.log(\"action\", action, \"store\",store.getState())\n            var result = next(action)\n            console.log(\".....\",store.getState())\n            \n        }\n        \n    }\n    \n} */\n\n/*\n   let squre=function (num){\n       return num*num\n   }\n   let squre =()=>{\n       return num*num\n   }\n   same as\n   let square=num=>num*nums\n\n*/\n\n//ES6 syntax\nexport let logger=store=>next=>action=>{\n    //console.log(\"This is middlewares\")\n  //  console.log(\"before action\", action, \"store\",store.getState())\n    var result = next(action)\n   // console.log(\" after actions.....\",store.getState())\n}"]},"metadata":{},"sourceType":"module"}